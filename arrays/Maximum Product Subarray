/ Given an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.

// It is guaranteed that the answer will fit in a 32-bit integer.

// A subarray is a contiguous subsequence of the array.

 

// Example 1:

// Input: nums = [2,3,-2,4]
// Output: 6
// Explanation: [2,3] has the largest product 6.
// Example 2:

// Input: nums = [-2,0,-1]
// Output: 0
// Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
CODE:
class Solution {
public:
    int maxProduct(vector<int>& nums) {
       int ans=nums[0];
        int ma=ans;
        int mi=ans;
        int n=nums.size();
        for(int i=1;i<n;i++)
        {
          if(nums[i]<0)
          {
              swap(ma,mi);
          }
            ma=max(nums[i],ma*nums[i]);
            mi=min(nums[i],mi*nums[i]);
            ans=max(ans,ma);
        }
        return ans;
    }
};
