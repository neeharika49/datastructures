Given two lists sorted in increasing order, create a new list representing the intersection of the two lists. The new list should be made with its own memory â€” the original lists should not be changed.
Note: The list elements are not necessarily distinct.

Example 1:

Input:
L1 = 1->2->3->4->6
L2 = 2->4->6->8
Output: 2 4 6
Explanation: For the given first two
linked list, 2, 4 and 6 are the elements
in the intersection.
Example 2:

Input:
L1 = 10->20->40->50
L2 = 15->40
Output: 40



CODE:

Node* findIntersection(Node* head1, Node* head2)
{   Node* p=head1;
Node* q= head2;
Node*head=NULL;
Node*tail=NULL;
while(p!=NULL && q!=NULL )
{
    if(p->data>q->data)
    {
        q=q->next;
    }
    else if(p->data<q->data)
    {
        p=p->next;
    }
    else
    {
        struct Node* new1=new Node(p->data);
        new1->next=NULL;
      if(head==NULL)
      {
        new1->next=NULL;
        head=tail=new1;
        }
      else
      {
      tail->next=new1;
      tail=new1;
      }
      p=p->next;
      q=q->next;
    }
}
return head;
    // Your Code Here
}
